#!/bin/bash

# Script para configurar permiss√µes do Google Cloud Document AI
# Execute este script para corrigir problemas de permiss√£o

set -e

echo "üîß Configurando permiss√µes do Google Cloud Document AI..."

# Verificar se gcloud est√° instalado
if ! command -v gcloud &> /dev/null; then
    echo "‚ùå Google Cloud CLI n√£o est√° instalado."
    echo "   Instale em: https://cloud.google.com/sdk/docs/install"
    exit 1
fi

# Carregar vari√°veis de ambiente
if [ -f ".env.local" ]; then
    export $(grep -v '^#' .env.local | xargs)
fi

PROJECT_ID=${GOOGLE_CLOUD_PROJECT_ID:-"finance-app-469314"}
LOCATION=${GOOGLE_CLOUD_LOCATION:-"eu"}
SERVICE_ACCOUNT_EMAIL="finance-ocr@${PROJECT_ID}.iam.gserviceaccount.com"

echo "üìã Configura√ß√£o:"
echo "   Project ID: $PROJECT_ID"
echo "   Location: $LOCATION"
echo "   Service Account: $SERVICE_ACCOUNT_EMAIL"

# Configurar projeto ativo
echo "üîß Configurando projeto ativo..."
gcloud config set project $PROJECT_ID

# Habilitar APIs necess√°rias
echo "üîß Habilitando APIs do Google Cloud..."
gcloud services enable documentai.googleapis.com
gcloud services enable iam.googleapis.com

# Adicionar permiss√µes √† service account
echo "üîß Adicionando permiss√µes Document AI..."
gcloud projects add-iam-policy-binding $PROJECT_ID \
    --member="serviceAccount:$SERVICE_ACCOUNT_EMAIL" \
    --role="roles/documentai.apiUser"

echo "üîß Adicionando permiss√µes de viewer para listar processadores..."
gcloud projects add-iam-policy-binding $PROJECT_ID \
    --member="serviceAccount:$SERVICE_ACCOUNT_EMAIL" \
    --role="roles/documentai.viewer"

# Verificar se existe processador
echo "üìã Verificando processadores existentes..."
gcloud ai document-processors list --location=$LOCATION --format="table(name,displayName,type,state)" || {
    echo "‚ö†Ô∏è  Nenhum processador encontrado. Criando processador padr√£o..."
    
    # Criar processador OCR gen√©rico
    echo "üîß Criando processador Document OCR..."
    PROCESSOR_NAME=$(gcloud ai document-processors create \
        --location=$LOCATION \
        --display-name="Processador OCR Principal" \
        --type=OCR_PROCESSOR \
        --format="value(name)")
    
    # Extrair ID do processador
    PROCESSOR_ID=$(basename $PROCESSOR_NAME)
    echo "‚úÖ Processador criado: $PROCESSOR_ID"
    echo "   Adicione ao .env.local: GOOGLE_DOCUMENT_AI_PROCESSOR_ID=$PROCESSOR_ID"
}

# Verificar se existe processador de formul√°rios
echo "üîß Verificando processador de formul√°rios..."
if ! gcloud ai document-processors list --location=$LOCATION --filter="type:FORM_PARSER_PROCESSOR" --format="value(name)" | head -1 > /dev/null; then
    echo "üîß Criando processador Form Parser..."
    FORM_PROCESSOR_NAME=$(gcloud ai document-processors create \
        --location=$LOCATION \
        --display-name="Processador Formul√°rios" \
        --type=FORM_PARSER_PROCESSOR \
        --format="value(name)")
    
    FORM_PROCESSOR_ID=$(basename $FORM_PROCESSOR_NAME)
    echo "‚úÖ Processador de formul√°rios criado: $FORM_PROCESSOR_ID"
    echo "   Adicione ao .env.local: GOOGLE_DOCUMENT_AI_PROCESSOR_ID_BANK=$FORM_PROCESSOR_ID"
fi

echo ""
echo "‚úÖ Configura√ß√£o conclu√≠da!"
echo ""
echo "üìù Pr√≥ximos passos:"
echo "1. Execute: node test-document-ai-improved.js"
echo "2. Se funcionar, teste: npm run dev"
echo "3. Teste upload de PDF na aplica√ß√£o"
echo ""
echo "üí° Se ainda houver problemas:"
echo "1. Aguarde 1-2 minutos para as permiss√µes se propagarem"
echo "2. Verifique se a API Document AI est√° habilitada no Console"
echo "3. Confirme que est√° usando a regi√£o correta ($LOCATION)"
